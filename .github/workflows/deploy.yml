name: deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  DOCKER_IMAGE_PROJECT: ghcr.io/${{ github.repository }}

jobs:
  build-client:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push client-admin
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE_PROJECT }}/client:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-server:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push client-admin
        uses: docker/build-push-action@v3
        with:
          context: mail
          push: true
          tags: ${{ env.DOCKER_IMAGE_PROJECT }}/server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-22.04

    needs: [build-client, build-server]

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh/
          echo -e 'Host *\n\tStrictHostKeyChecking no\n\n' > ~/.ssh/config
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      - name: Deploy ðŸš€
        run: |
          env EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
          env DOCKER_IMAGE_PROJECT=${{ env.DOCKER_IMAGE_PROJECT }} \
          docker stack deploy --prune --with-registry-auth -c docker-compose.yml fur-chins-site
        env:
          DOCKER_HOST: ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
